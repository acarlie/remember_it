{"version":3,"sources":["components/Modal/Modal.module.scss","components/Card/Card.module.scss","components/Header/Header.module.scss","components/Jumbotron/Jumbotron.module.scss","components/App/App.module.scss","components/Container/Container.module.scss","components/Button/Button.module.scss","components/Counter/Counter.module.scss","components/Container/Container.js","components/Header/Header.js","components/Button/Button.js","components/Jumbotron/Jumbotron.js","components/Card/Card-Container.js","components/Card/Card.js","components/Counter/Counter.js","components/Modal/Modal.js","assets/data/colors.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","className","styles","this","props","children","Component","Header","Button","onClick","handler","Jumbotron","state","isDismissed","dismissHandler","setState","aria-hidden","title","dismissable","CardContainer","Card","color","id","color1","color2","icon","name","background","shadow","textShadow","style","checkChoice","aria-label","Counter","aria-live","count","Modal","openDialog","score","topScore","open","closeRef","current","focus","body","document","getElementsByTagName","height","overflow","closeDialog","closeHandler","e","preventDefault","target","React","createRef","role","aria-labelledby","aria-describedby","ref","colors","iconSrName","App","shuffleArray","i","length","j","Math","floor","random","temp","incrementScore","setPicked","picked","concat","setTopScore","resetGame","event","currentTarget","indexOf","modalRef","addEventListener","code","map","key","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7e930d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"open\":\"Modal_open__Kk_En\",\"closed\":\"Modal_closed__ubkAb\",\"modal\":\"Modal_modal__2Igu4\",\"inner\":\"Modal_inner__1NXfU\",\"scrim\":\"Modal_scrim__1xLx1\",\"close\":\"Modal_close__2ZStn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1yQO7\",\"card__icon\":\"Card_card__icon__1Wlq_\",\"card__container\":\"Card_card__container__BoPvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ma4Rc\",\"header__inner\":\"Header_header__inner__1L4H2\",\"header__logo\":\"Header_header__logo__3DUHy\",\"header__content\":\"Header_header__content__3GJ-f\",\"container\":\"Header_container__1aRGp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotron\":\"Jumbotron_jumbotron__ICs_o\",\"jumbotron__content\":\"Jumbotron_jumbotron__content__tURQe\",\"visible\":\"Jumbotron_visible__398oX\",\"hidden\":\"Jumbotron_hidden__114lK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__319yx\",\"sr-only\":\"App_sr-only__1tWxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3mw96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Y_yC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1kH3q\"};","import React, { Component } from 'react';\r\nimport styles from './Container.module.scss';\r\n\r\nclass Container extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles['container']}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport Container from '../Container/Container';\r\nimport styles from './Header.module.scss';\r\n\r\nclass Header extends Component {\r\n    render () {\r\n        return (\r\n            <header className={styles['header']}>\r\n                <Container>\r\n                    <div className={styles['header__inner']}>\r\n                        <div className={styles['header__logo']}>\r\n                            <h1 className=\"heading--1\">Remember It</h1>\r\n                        </div>\r\n                        <div className={styles['header__content']}>\r\n                            {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport styles from './Button.module.scss';\r\n\r\nclass Button extends Component {\r\n    render () {\r\n        return (\r\n            <button className={styles['button']} onClick={this.props.handler}>\r\n                {this.props.children}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n// import Container from '../Container/Container';\r\nimport Button from '../Button/Button';\r\nimport styles from './Jumbotron.module.scss';\r\n\r\nclass Jumbotron extends Component {\r\n    state = {\r\n        isDismissed: false\r\n    }\r\n\r\n    dismissHandler = () => {\r\n        this.setState({\r\n            isDismissed: true\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <section className={`text-center ${styles['jumbotron']} ${this.state.isDismissed ? styles['hidden'] : styles['visible']}`} aria-hidden={this.state.isDismissed ? 'true' : null}>\r\n                <div className={styles['jumbotron__content']}>\r\n                    <h2 className=\"heading--4\">{this.props.title}</h2>\r\n                    <p>{this.props.children}</p>\r\n                    <p>{this.props.dismissable && <Button handler={this.dismissHandler}>Dismiss</Button>}</p>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React, { Component } from 'react';\r\nimport styles from './Card.module.scss';\r\n\r\nclass CardContainer extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles['card__container']}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardContainer;\r\n","import React, { Component } from 'react';\r\nimport styles from './Card.module.scss';\r\n\r\nclass Card extends Component {\r\n    render () {\r\n        const { id, color1, color2, icon, name } = this.props.color;\r\n        const background = { background: `linear-gradient(to right, ${color1}, ${color2})` };\r\n        const shadow = { textShadow: `2px 2px 10px ${color2}` };\r\n\r\n        return (\r\n            <button id={id} className={styles['card']} style={background} onClick={this.props.checkChoice} aria-label={name}>\r\n                <i className={`material-icons ${styles['card__icon']}`} style={shadow} aria-hidden=\"true\">{icon}</i>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport styles from './Counter.module.scss';\r\n\r\nclass Counter extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles['counter']}>\r\n                <span className=\"heading--5\" aria-live=\"polite\">\r\n                    {this.props.title}: {this.props.count}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\r\nimport styles from './Modal.module.scss';\r\n\r\nclass Modal extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            score: 0,\r\n            topScore: 0\r\n        };\r\n        this.closeRef = React.createRef();\r\n    }\r\n\r\n    openDialog = (score, topScore) => {\r\n        this.setState({\r\n            open: true,\r\n            score: score,\r\n            topScore: topScore\r\n        }, () => {\r\n            this.closeRef.current.focus();\r\n        });\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.style.height = '100%';\r\n        this.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.body.style = '';\r\n        this.setState({\r\n            open: false\r\n        }, () => {\r\n            // const firstCard = document.querySelector('button[class*=\"card\"]');\r\n            // firstCard.focus();\r\n        });\r\n    }\r\n\r\n    closeHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (e.target.id === 'scrim' || e.target.id === 'close' || e.target.id === 'close-inner') {\r\n            this.closeDialog();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id=\"scrim\" className={this.state.open ? styles['open'] + ' ' + styles['scrim'] : styles['closed'] + ' ' + styles['scrim']} onClick={(e) => this.closeHandler(e)}>\r\n                <div id=\"dialog\" role=\"dialog\" aria-labelledby=\"title\" aria-describedby=\"description\" className={this.state.open ? styles['open'] + ' ' + styles['modal'] : styles['closed'] + ' ' + styles['modal']}>\r\n                    <h2 id=\"title\" className=\"heading--4\">\r\n                        { this.state.score === 12 &&\r\n                            'You won!'\r\n                        }\r\n                        { this.state.score > this.state.topScore && this.state.score !== 12 &&\r\n                            'Top score!'\r\n                        }\r\n                        { this.state.score < this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            'Round over'\r\n                        }\r\n                        { this.state.score === this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            'Round over'\r\n                        }\r\n\r\n                    </h2>\r\n                    <p id=\"description\">\r\n                        { this.state.score === 12 &&\r\n                            'You scored the maximum of 12 points! '\r\n                        }\r\n                        { this.state.score > this.state.topScore &&\r\n                                `Your score of ${this.state.score} beat your top score of ${this.state.topScore}.`\r\n                        }\r\n                        { this.state.score < this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            `Your score was ${this.state.score}`\r\n                        }\r\n                        { this.state.score === this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            `Your score was ${this.state.score}`\r\n                        }\r\n                    </p>\r\n                    <button id=\"close\" className={styles['close']} aria-label=\"close dialog\" ref={this.closeRef} onClick={(e) => this.closeHandler(e)}>\r\n                        <span id=\"close-inner\" onClick={(e) => this.closeHandler(e)}>×</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","const colors = [\r\n    { id: '1', name: 'aqua', color1: 'rgba(166,255,203,1.0)', color2: 'rgba(18,216,250,1.0)', icon: 'ac_unit', iconSrName: 'snowflake' },\r\n    { id: '2', name: 'purple', color1: 'rgba(225,0,255,1.0)', color2: 'rgba(127,0,255,1.0)', icon: 'color_lens', iconSrName: 'palette' },\r\n    { id: '3', name: 'lime', color1: 'rgba(220,227,91,1.0)', color2: 'rgba(69,182,73,1.0)', icon: 'eco', iconSrName: 'leaf' },\r\n    { id: '4', name: 'citrus', color1: 'rgba(253,200,48,1.0)', color2: 'rgba(243,115,53,1.0)', icon: 'grade', iconSrName: 'star' },\r\n    { id: '5', name: 'bubblegum', color1: 'rgba(255,142,208,1.0)', color2: 'rgba(228,90,203,1.0)', icon: 'favorite', iconSrName: 'heart' },\r\n    { id: '6', name: 'rose', color1: 'rgba(255,173,221,1.0)', color2: 'rgba(255,110,139,1.0)', icon: 'filter_vintage', iconSrName: 'flower' },\r\n    { id: '7', name: 'avocado', color1: 'rgba(217,228,90,1.0)', color2: 'rgba(157,178,48,1.0)', icon: 'public', iconSrName: 'earth' },\r\n    { id: '8', name: 'turquoise', color1: 'rgba(99,236,211,1.0)', color2: 'rgba(21,161,162,1.0)', icon: 'beach_access', iconSrName: 'umbrella' },\r\n    { id: '9', name: 'gold', color1: 'rgba(255,223,122,1.0)', color2: 'rgba(255,162,27,1.0)', icon: 'emoji_emotions', iconSrName: 'emoticon' },\r\n    { id: '10', name: 'sky', color1: 'rgba(19,238,255,1.0)', color2: 'rgba(122,167,255,1.0)', icon: 'cloud', iconSrName: 'cloud' },\r\n    { id: '11', name: 'melon', color1: 'rgba(186,255,216,1.0)', color2: 'rgba(12,207,138,1.0)', icon: 'toys', iconSrName: 'pinwheel' },\r\n    { id: '12', name: 'ultramarine', color1: 'rgba(46,134,255,1.0)', color2: 'rgba(31,18,218,1.0)', icon: 'brightness_2', iconSrName: 'moon' }\r\n];\r\n\r\nexport default colors;\r\n","import React, { Component } from 'react';\n\n// Components\nimport Header from '../Header/Header';\nimport Container from '../Container/Container';\nimport Jumbotron from '../Jumbotron/Jumbotron';\nimport CardContainer from '../Card/Card-Container';\nimport Card from '../Card/Card';\nimport Counter from '../Counter/Counter';\nimport Modal from '../Modal/Modal';\n\n// Data\nimport colors from '../../assets/data/colors.js';\n\n// Styles\nimport '../../assets/css/reset.min.css';\nimport '../../assets/css/variables.css';\nimport '../../assets/css/typography.css';\nimport styles from './App.module.scss';\n\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            colors,\n            score: 0,\n            picked: [],\n            topScore: 0\n        };\n        this.modalRef = React.createRef();\n    }\n\n    componentDidMount () {\n        document.addEventListener('keydown', (e) => {\n            if (e.code === 'Escape') {\n                this.modalRef.current.closeDialog();\n            }\n        });\n    }\n\n    shuffleArray = () => {\n        const [...colors] = this.state.colors;\n        for (let i = colors.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i);\n            const temp = colors[i];\n            colors[i] = colors[j];\n            colors[j] = temp;\n        }\n\n        // const firstCard = document.querySelector('button[class*=\"card\"]');\n        // firstCard.focus();\n\n        this.setState({\n            colors\n        });\n    }\n\n    incrementScore = () => {\n        const score = this.state.score + 1;\n        this.setState({\n            score\n        });\n    }\n\n    setPicked = (id) => {\n        const picked = this.state.picked.concat([id]);\n        this.setState({\n            picked\n        });\n    }\n\n    setTopScore = (score) => {\n        const topScore = score > this.state.topScore ? score : this.state.topScore;\n        this.setState({\n            topScore\n        });\n    }\n\n    resetGame = () => {\n        this.setState({\n            picked: [],\n            score: 0\n        });\n    }\n\n    checkChoice = (event) => {\n        const id = event.currentTarget.id;\n        const isValid = this.state.picked.indexOf(id) === -1;\n        if (isValid) {\n            this.setPicked(id);\n            this.shuffleArray();\n            this.incrementScore();\n            if (this.state.score === 11) {\n                this.modalRef.current.openDialog(12, this.state.topScore);\n            }\n        } else {\n            this.setTopScore(this.state.score);\n            this.shuffleArray();\n            this.modalRef.current.openDialog(this.state.score, this.state.topScore);\n            this.resetGame();\n        }\n    }\n\n    render () {\n        return (\n            <div className={styles['app']}>\n                <Header>\n                    <Counter count={this.state.score} title='Score' />\n                    <Counter count={this.state.topScore} title='Top Score' />\n                </Header>\n                <main className={styles['main']}>\n                    <Jumbotron dismissable={true} title='Click a button to begin!'>\n                        Click on a button to earn points, but don't click the same button more than once!\n                        <span className={styles['sr-only']}>Please note: buttons will shuffle after each round. A round is lost by clicking the same button twice within a round. There are twelve possible points in a round.</span>\n                    </Jumbotron>\n                    <Container>\n                        <CardContainer>\n                            {\n                                this.state.colors.map((color, i) => {\n                                    return <Card key={i} color={color} checkChoice={this.checkChoice} />;\n                                })\n                            }\n                        </CardContainer>\n                    </Container>\n                    <Modal ref={this.modalRef}/>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}