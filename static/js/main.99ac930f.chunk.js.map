{"version":3,"sources":["components/Modal/Modal.module.scss","components/Card/Card.module.scss","components/Header/Header.module.scss","components/Jumbotron/Jumbotron.module.scss","components/App/App.module.scss","components/Button/Button.module.scss","components/Container/Container.module.scss","components/Counter/Counter.module.scss","components/Container/Container.js","components/Header/Header.js","components/Button/Button.js","components/Jumbotron/Jumbotron.js","components/Card/Card-Container.js","components/Card/Card.js","components/Counter/Counter.js","components/Modal/Modal.js","assets/data/colors.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","className","styles","this","props","children","Component","Header","Button","setFocus","buttonRef","current","focus","React","createRef","id","ref","fullWidth","onClick","handler","Jumbotron","state","isDismissed","dismissHandler","setState","aria-hidden","title","dismissable","CardContainer","Card","color","color1","color2","icon","name","background","shadow","textShadow","style","checkChoice","aria-label","Counter","aria-live","count","Modal","openDialog","score","topScore","open","closeRef","setBodyStyle","closeDialog","reset","closeHandler","e","preventDefault","target","isOpen","body","height","overflow","document","getElementsByTagName","role","aria-labelledby","aria-describedby","colors","iconSrName","App","shuffleArray","i","length","j","Math","floor","random","temp","incrementScore","setPicked","picked","concat","setTopScore","resetGame","event","currentTarget","indexOf","modalRef","addEventListener","code","map","key","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99ac930f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2Igu4\",\"modal--open\":\"Modal_modal--open__1p1bB\",\"modal--closed\":\"Modal_modal--closed__bQ1CY\",\"modal__desc\":\"Modal_modal__desc__2Eto-\",\"modal__footer\":\"Modal_modal__footer__1YXF0\",\"modal__inner\":\"Modal_modal__inner__rfn-B\",\"modal__scrim\":\"Modal_modal__scrim__3n2QO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1yQO7\",\"card__icon\":\"Card_card__icon__1Wlq_\",\"card__container\":\"Card_card__container__BoPvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ma4Rc\",\"header__inner\":\"Header_header__inner__1L4H2\",\"header__logo\":\"Header_header__logo__3DUHy\",\"header__content\":\"Header_header__content__3GJ-f\",\"container\":\"Header_container__1aRGp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotron\":\"Jumbotron_jumbotron__ICs_o\",\"jumbotron__content\":\"Jumbotron_jumbotron__content__tURQe\",\"visible\":\"Jumbotron_visible__398oX\",\"hidden\":\"Jumbotron_hidden__114lK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__319yx\",\"sr-only\":\"App_sr-only__1tWxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Y_yC\",\"button--full-width\":\"Button_button--full-width__1oI1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3mw96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1kH3q\"};","import React, { Component } from 'react';\r\nimport styles from './Container.module.scss';\r\n\r\nclass Container extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles['container']}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport Container from '../Container/Container';\r\nimport styles from './Header.module.scss';\r\n\r\nclass Header extends Component {\r\n    render () {\r\n        return (\r\n            <header className={styles['header']}>\r\n                <Container>\r\n                    <div className={styles['header__inner']}>\r\n                        <div className={styles['header__logo']}>\r\n                            <h1 className=\"heading--1\">Remember It</h1>\r\n                        </div>\r\n                        <div className={styles['header__content']}>\r\n                            {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport styles from './Button.module.scss';\r\n\r\nclass Button extends Component {\r\n     constructor (props) {\r\n        super(props);\r\n        this.buttonRef = React.createRef();\r\n    }\r\n\r\n    setFocus = () => {\r\n        this.buttonRef.current.focus();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <button id={this.props.id ? this.props.id : null} ref={this.buttonRef} className={`${styles['button']} ${this.props.fullWidth ? styles['button--full-width'] : ''}`} onClick={this.props.handler}>\r\n                {this.props.children}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n// import Container from '../Container/Container';\r\nimport Button from '../Button/Button';\r\nimport styles from './Jumbotron.module.scss';\r\n\r\nclass Jumbotron extends Component {\r\n    state = {\r\n        isDismissed: false\r\n    }\r\n\r\n    dismissHandler = () => {\r\n        this.setState({\r\n            isDismissed: true\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <section className={`text-center ${styles['jumbotron']} ${this.state.isDismissed ? styles['hidden'] : styles['visible']}`} aria-hidden={this.state.isDismissed ? 'true' : null}>\r\n                <div className={styles['jumbotron__content']}>\r\n                    <h2 className=\"heading--4\">{this.props.title}</h2>\r\n                    <p>{this.props.children}</p>\r\n                    <p>{this.props.dismissable && <Button handler={this.dismissHandler}>Dismiss</Button>}</p>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React, { Component } from 'react';\r\nimport styles from './Card.module.scss';\r\n\r\nclass CardContainer extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles['card__container']}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardContainer;\r\n","import React, { Component } from 'react';\r\nimport styles from './Card.module.scss';\r\n\r\nclass Card extends Component {\r\n    render () {\r\n        const { id, color1, color2, icon, name } = this.props.color;\r\n        const background = { background: `linear-gradient(to right, ${color1}, ${color2})` };\r\n        const shadow = { textShadow: `2px 2px 10px ${color2}` };\r\n\r\n        return (\r\n            <button id={id} className={styles['card']} style={background} onClick={this.props.checkChoice} aria-label={name}>\r\n                <i className={`material-icons ${styles['card__icon']}`} style={shadow} aria-hidden=\"true\">{icon}</i>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport styles from './Counter.module.scss';\r\n\r\nclass Counter extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles['counter']}>\r\n                <span className=\"heading--5\" aria-live=\"polite\">\r\n                    {this.props.title}: {this.props.count}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\r\nimport styles from './Modal.module.scss';\r\nimport Button from './../Button/Button.js';\r\n\r\nclass Modal extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            score: 0,\r\n            topScore: 0\r\n        };\r\n        this.closeRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.body = document.getElementsByTagName('body')[0];\r\n    }\r\n\r\n    openDialog = (score, topScore) => {\r\n        this.setState({\r\n            open: true,\r\n            score: score,\r\n            topScore: topScore\r\n        }, () => {\r\n            this.closeRef.current.setFocus();\r\n            this.setBodyStyle(true);\r\n        });\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({\r\n            open: false\r\n        }, () => {\r\n            this.props.reset();\r\n            this.setBodyStyle(false);\r\n        });\r\n    }\r\n\r\n    closeHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (e.target.id === 'scrim' || e.target.id === 'close') {\r\n            this.closeDialog();\r\n        }\r\n    }\r\n\r\n    setBodyStyle = (isOpen) => {\r\n        if (isOpen) {\r\n            this.body.style.height = '100%';\r\n            this.body.style.overflow = 'hidden';\r\n        } else {\r\n            this.body.style = '';\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id=\"scrim\" className={this.state.open ? styles['modal--open'] + ' ' + styles['modal__scrim'] : styles['modal--closed'] + ' ' + styles['modal__scrim']} onClick={(e) => this.closeHandler(e)}>\r\n                <div id=\"dialog\" role=\"dialog\" aria-labelledby=\"title\" aria-describedby=\"description\" className={this.state.open ? styles['modal--open'] + ' ' + styles['modal'] : styles['modal--closed'] + ' ' + styles['modal']}>\r\n                    <h2 id=\"title\" className=\"heading--4\">\r\n                        { this.state.score === 12 &&\r\n                            'You won!'\r\n                        }\r\n                        { this.state.score > this.state.topScore && this.state.score !== 12 &&\r\n                            'Top score!'\r\n                        }\r\n                        { this.state.score < this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            'Round over'\r\n                        }\r\n                        { this.state.score === this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            'Round over'\r\n                        }\r\n\r\n                    </h2>\r\n                    <p id=\"description\" className={styles['modal__desc']}>\r\n                        { this.state.score === 12 &&\r\n                            'You scored the maximum of 12 points! '\r\n                        }\r\n                        { this.state.score > this.state.topScore &&\r\n                                `Your score of ${this.state.score} beat your top score of ${this.state.topScore}.`\r\n                        }\r\n                        { this.state.score < this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            `Your score was ${this.state.score}`\r\n                        }\r\n                        { this.state.score === this.state.topScore &&\r\n                          this.state.score < 12 &&\r\n                            `Your score was ${this.state.score}`\r\n                        }\r\n                    </p>\r\n                    <div className={styles['modal__footer']}>\r\n                        <Button id=\"close\" onClick={(e) => this.closeHandler(e)} ref={this.closeRef} fullWidth>Play again</Button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","const colors = [\r\n    { id: '1', name: 'aqua', color1: 'rgba(166,255,203,1.0)', color2: 'rgba(18,216,250,1.0)', icon: 'ac_unit', iconSrName: 'snowflake' },\r\n    { id: '2', name: 'purple', color1: 'rgba(225,0,255,1.0)', color2: 'rgba(127,0,255,1.0)', icon: 'color_lens', iconSrName: 'palette' },\r\n    { id: '3', name: 'lime', color1: 'rgba(220,227,91,1.0)', color2: 'rgba(69,182,73,1.0)', icon: 'eco', iconSrName: 'leaf' },\r\n    { id: '4', name: 'citrus', color1: 'rgba(253,200,48,1.0)', color2: 'rgba(243,115,53,1.0)', icon: 'grade', iconSrName: 'star' },\r\n    { id: '5', name: 'bubblegum', color1: 'rgba(255,142,208,1.0)', color2: 'rgba(228,90,203,1.0)', icon: 'favorite', iconSrName: 'heart' },\r\n    { id: '6', name: 'rose', color1: 'rgba(255,173,221,1.0)', color2: 'rgba(255,110,139,1.0)', icon: 'filter_vintage', iconSrName: 'flower' },\r\n    { id: '7', name: 'avocado', color1: 'rgba(217,228,90,1.0)', color2: 'rgba(157,178,48,1.0)', icon: 'public', iconSrName: 'earth' },\r\n    { id: '8', name: 'turquoise', color1: 'rgba(99,236,211,1.0)', color2: 'rgba(21,161,162,1.0)', icon: 'beach_access', iconSrName: 'umbrella' },\r\n    { id: '9', name: 'gold', color1: 'rgba(255,223,122,1.0)', color2: 'rgba(255,162,27,1.0)', icon: 'emoji_emotions', iconSrName: 'emoticon' },\r\n    { id: '10', name: 'sky', color1: 'rgba(19,238,255,1.0)', color2: 'rgba(122,167,255,1.0)', icon: 'cloud', iconSrName: 'cloud' },\r\n    { id: '11', name: 'melon', color1: 'rgba(186,255,216,1.0)', color2: 'rgba(12,207,138,1.0)', icon: 'toys', iconSrName: 'pinwheel' },\r\n    { id: '12', name: 'ultramarine', color1: 'rgba(46,134,255,1.0)', color2: 'rgba(31,18,218,1.0)', icon: 'brightness_2', iconSrName: 'moon' }\r\n];\r\n\r\nexport default colors;\r\n","import React, { Component } from 'react';\n\n// Components\nimport Header from '../Header/Header';\nimport Container from '../Container/Container';\nimport Jumbotron from '../Jumbotron/Jumbotron';\nimport CardContainer from '../Card/Card-Container';\nimport Card from '../Card/Card';\nimport Counter from '../Counter/Counter';\nimport Modal from '../Modal/Modal';\n\n// Data\nimport colors from '../../assets/data/colors.js';\n\n// Styles\nimport '../../assets/css/reset.min.css';\nimport '../../assets/css/variables.css';\nimport '../../assets/css/typography.css';\nimport styles from './App.module.scss';\n\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            colors,\n            score: 0,\n            picked: [],\n            topScore: 0\n        };\n        this.modalRef = React.createRef();\n    }\n\n    componentDidMount () {\n        document.addEventListener('keydown', (e) => {\n            if (e.code === 'Escape') {\n                this.modalRef.current.closeDialog();\n            }\n        });\n    }\n\n    shuffleArray = () => {\n        const [...colors] = this.state.colors;\n        for (let i = colors.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i);\n            const temp = colors[i];\n            colors[i] = colors[j];\n            colors[j] = temp;\n        }\n\n        this.setState({\n            colors\n        });\n    }\n\n    incrementScore = () => {\n        const score = this.state.score + 1;\n        this.setState({\n            score\n        });\n    }\n\n    setPicked = (id) => {\n        const picked = this.state.picked.concat([id]);\n        this.setState({\n            picked\n        });\n    }\n\n    setTopScore = (score) => {\n        const topScore = score > this.state.topScore ? score : this.state.topScore;\n        this.setState({\n            topScore\n        });\n    }\n\n    resetGame = () => {\n        this.setState({\n            picked: [],\n            score: 0\n        });\n    }\n\n    checkChoice = (event) => {\n        const id = event.currentTarget.id;\n        const isValid = this.state.picked.indexOf(id) === -1;\n        if (isValid) {\n            this.setPicked(id);\n            this.shuffleArray();\n            this.incrementScore();\n            if (this.state.score === 11) {\n                this.modalRef.current.openDialog(12, this.state.topScore);\n            }\n        } else {\n            this.setTopScore(this.state.score);\n            this.shuffleArray();\n            this.modalRef.current.openDialog(this.state.score, this.state.topScore);\n        }\n    }\n\n    render () {\n        return (\n            <div className={styles['app']}>\n                <Header>\n                    <Counter count={this.state.score} title='Score' />\n                    <Counter count={this.state.topScore} title='Top Score' />\n                </Header>\n                <main className={styles['main']}>\n                    <Jumbotron dismissable={true} title='Click a button to begin!'>\n                        Click on a button to earn points, but don't click the same button more than once!\n                        <span className={styles['sr-only']}>Please note: buttons will shuffle after each round. A round is lost by clicking the same button twice within a round. There are twelve possible points in a round.</span>\n                    </Jumbotron>\n                    <Container>\n                        <CardContainer>\n                            {\n                                this.state.colors.map((color, i) => {\n                                    return <Card key={i} color={color} checkChoice={this.checkChoice} />;\n                                })\n                            }\n                        </CardContainer>\n                    </Container>\n                    <Modal ref={this.modalRef} reset={this.resetGame}/>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}